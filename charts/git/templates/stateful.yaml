apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app.name" . }}
  namespace: {{ .Values.nameSpace }}
  labels:
{{ include "app.labels" . | indent 4 }}
spec:
  serviceName: {{ include "app.name" . }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: init-{{ include "app.name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: [ "/bin/bash", "-c", "--" ]
        args:  [ "test ! -f /data/.bashrc && cd /data && tar xvzf /tmp/user_home.tgz || true ; chown -R git /data ;" ]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: {{ include "app.name" . }}-vol
          mountPath: /data
      containers:
        - name: {{ include "app.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /data
              name: {{ include "app.name" . }}-vol
          ports:
            - containerPort: 9418
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9418
          readinessProbe:
            tcpSocket:
              port: 9418
      volumes:
        - name: {{ include "app.name" . }}-vol
          persistentVolumeClaim:
            claimName: {{ include "app.name" . }}-pvc
